# django
APP_ENV='local' # local, staging, production
SECRET_KEY= # generate from https://djecrety.ir/
DEBUG=False
# [::1] is all IPv6
# * is all IPv4
ALLOWED_HOSTS=[::1] *

# database access credentials
DB_ENGINE=django_tenants.postgresql_backend
DB_HOST=db
DB_NAME=plio
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=

# web server
APP_PORT=8001

# google oauth credentials
GOOGLE_OAUTH2_CLIENT_ID=
GOOGLE_OAUTH2_CLIENT_SECRET=

# aws credentials
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=

# redis details
REDIS_HOSTNAME='redis'
REDIS_PORT=6379

# plio cms token
CMS_TOKEN=

SUPERUSER_EMAIL=
SUPERUSER_PASSWORD=

DEFAULT_TENANT_NAME=Plio
DEFAULT_TENANT_SHORTCODE=plio
DEFAULT_TENANT_DOMAIN=0.0.0.0

# Auth0 settings
AUTH0_TOKEN_URL=
AUTH0_CLIENT_ID=
AUTH0_CLIENT_SECRET=
AUTH0_AUDIENCE=

# email settings
EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST='smtp.gmail.com'
EMAIL_USE_TLS=True
EMAIL_PORT=587
DEFAULT_FROM_EMAIL=Plio <no-reply@plio.in>
EMAIL_HOST_USER= # sender's email-id
# password associated with above email-id
# for accounts with 2-factor authentication, you have to create a application-specific
# passwords. More on that here:
# https://dev.to/abderrahmanemustapha/how-to-send-email-with-django-and-gmail-in-production-the-right-way-24ab
EMAIL_HOST_PASSWORD=
